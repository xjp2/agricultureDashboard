/*
  # Create debt management tables

  1. New Tables
    - `debtOption`
      - `id` (bigint, primary key)
      - `category_name` (text, unique, not null)
      - `description` (text, optional)
      - `created_at` (timestamp with time zone)
    - `debtData`
      - `id` (bigint, primary key)
      - `month_year` (text, not null)
      - `worker_name` (text, not null)
      - `category` (text, not null, foreign key to debtOption.category_name)
      - `amount` (numeric, not null, >= 0)
      - `created_at` (timestamp with time zone)
      - `updated_at` (timestamp with time zone)

  2. Security
    - Enable RLS on both tables
    - Add policies for public access

  3. Default Data
    - Insert default debt categories (BOH HING, TONG GAS, ROKOK)
*/

-- Create debtOption table first
CREATE TABLE IF NOT EXISTS public."debtOption" (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name text UNIQUE NOT NULL,
    description text,
    created_at timestamp with time zone DEFAULT now()
);

-- Create debtData table
CREATE TABLE IF NOT EXISTS public."debtData" (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    month_year text NOT NULL,
    worker_name text NOT NULL,
    category text NOT NULL,
    amount numeric(10,2) NOT NULL CHECK (amount >= 0),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now()
);

-- Add foreign key constraint
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'fk_debt_category'
    ) THEN
        ALTER TABLE public."debtData" 
        ADD CONSTRAINT fk_debt_category 
        FOREIGN KEY (category) REFERENCES public."debtOption"(category_name) ON DELETE RESTRICT;
    END IF;
END $$;

-- Enable RLS
ALTER TABLE public."debtOption" ENABLE ROW LEVEL SECURITY;
ALTER TABLE public."debtData" ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
CREATE POLICY "Enable all access for debtOption" ON public."debtOption"
    FOR ALL USING (true) WITH CHECK (true);

CREATE POLICY "Enable all access for debtData" ON public."debtData"
    FOR ALL USING (true) WITH CHECK (true);

-- Create trigger function for updated_at
CREATE OR REPLACE FUNCTION public.update_debt_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger
DROP TRIGGER IF EXISTS update_debtdata_updated_at ON public."debtData";
CREATE TRIGGER update_debtdata_updated_at
    BEFORE UPDATE ON public."debtData"
    FOR EACH ROW
    EXECUTE FUNCTION public.update_debt_updated_at();

-- Add indexes for better performance
CREATE INDEX IF NOT EXISTS idx_debt_data_category ON public."debtData" (category);
CREATE INDEX IF NOT EXISTS idx_debt_data_month_year ON public."debtData" (month_year);
CREATE INDEX IF NOT EXISTS idx_debt_data_worker_name ON public."debtData" (worker_name);
CREATE INDEX IF NOT EXISTS idx_debt_option_category_name ON public."debtOption" (category_name);

-- Insert default debt categories
INSERT INTO public."debtOption" (category_name, description)
VALUES
    ('BOH HING', 'Debt related to Boh Hing purchases'),
    ('TONG GAS', 'Debt related to Tong Gas purchases'),
    ('ROKOK', 'Debt related to cigarette purchases')
ON CONFLICT (category_name) DO NOTHING;